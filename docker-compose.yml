services:
  zookeeper:
    image: zookeeper:3.8.0
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_4LW_COMMANDS_WHITELIST: stat,ruok,mntr
    ports:
      - "127.0.0.1:2181:2181"
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "127.0.0.1:9092:9092"
    deploy:
      resources:
        limits:
          memory: "1g"
        reservations:
          memory: "512m"
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/logs
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
    depends_on:
      - kafka
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - elasticsearch
      - postgres
      - redis
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - ELASTIC_PASSWORD=yourpassword
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "1g"
    restart: unless-stopped

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: nubla_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: nubla_db
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    deploy:
      resources:
        limits:
          memory: "1g"
        reservations:
          memory: "512m"
    restart: unless-stopped

  redis:
    image: redis:7.0
    ports:
      - "127.0.0.1:6379:6379"
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped

volumes:
  esdata:
    driver: local
  postgres_data:
    driver: local