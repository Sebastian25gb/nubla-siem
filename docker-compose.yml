version: '3.8'

services:
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.0
    ports:
      - "24224:24224/udp"
      - "162:162/udp"
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    depends_on:
      kafka:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: always
    networks:
      - nubla-siem_default

  zookeeper:
    image: zookeeper:3.8.0
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_4LW_COMMANDS_WHITELIST: "srvr,ruok,stat"
    ports:
      - "127.0.0.1:2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 | grep Mode"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped
    networks:
      - nubla-siem_default

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://nubla_user:secure_password_123@postgres:5432/nubla_db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--timeout-keep-alive", "60", "--workers", "2"]
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "1g"
    restart: unless-stopped
    networks:
      - nubla-siem_default

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "127.0.0.1:9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "1g"
    restart: unless-stopped
    networks:
      - nubla-siem_default

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - nubla-siem_default

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.authc.api_key.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9201:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -E '\"status\":\"(green|yellow*)\"'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: "4g"
        reservations:
          memory: "2g"
    restart: unless-stopped
    networks:
      - nubla-siem_default

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: nubla_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: nubla_db
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./postgres-ssl:/etc/postgresql/ssl
    command: ["postgres", "-c", "ssl=on", "-c", "ssl_cert_file=/etc/postgresql/ssl/server.crt", "-c", "ssl_key_file=/etc/postgresql/ssl/server.key"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nubla_user -d nubla_db -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "1g"
    restart: unless-stopped
    networks:
      - nubla-siem_default

  redis:
    image: redis:7.0
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: "512m"
        reservations:
          memory: "256m"
    restart: unless-stopped
    networks:
      - nubla-siem_default

networks:
  nubla-siem_default:
    driver: bridge

volumes:
  esdata:
    driver: local
  postgres_data:
    driver: local